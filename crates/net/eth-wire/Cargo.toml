[package]
name = "reth-eth-wire"
description = "Implements the eth/64 and eth/65 P2P protocols"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
# reth
reth-codecs.workspace = true
reth-primitives.workspace = true
reth-ecies.workspace = true
alloy-rlp = { workspace = true, features = ["derive"] }
reth-discv4.workspace = true
reth-eth-wire-types.workspace = true
reth-network-peers.workspace = true

# metrics
reth-metrics.workspace = true

bytes.workspace = true
derive_more.workspace = true
thiserror.workspace = true
serde = { workspace = true, optional = true }
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true, features = ["io", "codec"] }
futures.workspace = true
tokio-stream.workspace = true
pin-project.workspace = true
tracing.workspace = true
snap = "1.0.5"

# arbitrary utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }

[dev-dependencies]
reth-net-common.workspace = true
reth-primitives = { workspace = true, features = ["arbitrary"] }
reth-tracing.workspace = true

test-fuzz.workspace = true
tokio-util = { workspace = true, features = ["io", "codec"] }
rand.workspace = true
secp256k1 = { workspace = true, features = [
    "global-context",
    "rand-std",
    "recovery",
] }

arbitrary = { workspace = true, features = ["derive"] }
proptest.workspace = true
proptest-derive.workspace = true
async-stream.workspace = true

[features]
default = ["serde"]
serde = ["dep:serde"]
arbitrary = [
    "reth-primitives/arbitrary",
    "dep:arbitrary",
    "dep:proptest",
    "dep:proptest-derive",
]
optimism = ["reth-primitives/optimism"]

[[test]]
name = "fuzz_roundtrip"
path = "tests/fuzz_roundtrip.rs"
required-features = ["arbitrary", "serde"]
