[package]
name = "reth-rpc"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Reth RPC implementation"

[lints]
workspace = true

[dependencies]
# reth
reth-primitives.workspace = true
reth-rpc-api.workspace = true
reth-rpc-server-types.workspace = true
reth-rpc-types.workspace = true
reth-errors.workspace = true
reth-provider = { workspace = true, features = ["test-utils"] }
reth-transaction-pool = { workspace = true, features = ["test-utils"] }
reth-network-api.workspace = true
reth-rpc-engine-api.workspace = true
reth-revm.workspace = true
reth-tasks = { workspace = true, features = ["rayon"] }
reth-consensus-common.workspace = true
reth-rpc-types-compat.workspace = true
revm-inspectors = { workspace = true, features = ["js-tracer"] }
reth-evm.workspace = true
reth-network-peers.workspace = true

reth-evm-optimism = { workspace = true, optional = true }

# eth
alloy-rlp.workspace = true
alloy-dyn-abi = { workspace = true, features = ["eip712"] }
alloy-primitives.workspace = true
alloy-sol-types.workspace = true
revm = { workspace = true, features = [
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_no_base_fee",
] }
revm-primitives = { workspace = true, features = ["serde"] }

# rpc
jsonrpsee.workspace = true
http.workspace = true
http-body.workspace = true
hyper.workspace = true
jsonwebtoken = "8"

# async
async-trait.workspace = true
tokio = { workspace = true, features = ["sync"] }
tower.workspace = true
tokio-stream = { workspace = true, features = ["sync"] }
pin-project.workspace = true
parking_lot.workspace = true

# metrics
reth-metrics.workspace = true
metrics.workspace = true

# misc
secp256k1 = { workspace = true, features = [
    "global-context",
    "rand-std",
    "recovery",
] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
thiserror.workspace = true
rand.workspace = true
tracing.workspace = true
tracing-futures = "0.2"
schnellru.workspace = true
futures.workspace = true
derive_more.workspace = true
dyn-clone.workspace = true

[dev-dependencies]
reth-evm-ethereum.workspace = true
reth-testing-utils.workspace = true

jsonrpsee = { workspace = true, features = ["client"] }
assert_matches.workspace = true
tempfile.workspace = true

[features]
optimism = [
    "reth-primitives/optimism",
    "reth-rpc-types-compat/optimism",
    "reth-provider/optimism",
    "dep:reth-evm-optimism",
    "reth-evm-optimism/optimism",
]
